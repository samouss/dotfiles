# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'.source.js, .source.ts':
  'Console logger':
    'prefix': 'cs;'
    'body': 'console.log($1);'

  'Console warning':
    'prefix': 'cw;'
    'body': 'console.warn($1);'

  'Console group':
    'prefix': 'cg;'
    'body': 'console.group($1);'

  'Console timer':
    'prefix': 'ct;'
    'body': 'console.time($1);'

  'Console timer end':
    'prefix': 'cte;'
    'body': 'console.timeEnd($1);'

  'Console logger beautifier':
    'prefix': 'jsoncs;'
    'body': 'console.log(JSON.stringify($1, null, 2));'

  'Performance test':
    'prefix': 'perftest;'
    'body': """
      const res0 = [];
      const res1 = [];

      for (let i = 0; i < 1000; i++) {
        const t0_0 = performance.now();
        $1
        const t0_1 = performance.now();

        res0.push((t0_1 - t0_0).toFixed(4));

        const t1_0 = performance.now();
        $2
        const t1_1 = performance.now();

        res1.push((t1_1 - t1_0).toFixed(4));

      }

      function median(res) {
        return res[Math.ceil(res.length / 2)];
      }

      console.group();
        console.log(`T0 takes ${ median(res0) }ms`);
        console.log(`T1 takes ${ median(res1) }ms`);
      console.groupEnd();
    """
